`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date:    18:09:40 09/23/2022 
// Design Name: Aashish
// Module Name:    fifo 
// Project Name: 
// Target Devices: 
// Tool versions: 
// Description: 
//
// Dependencies: 
//
// Revision: 
// Revision 0.01 - File Created
// Additional Comments: 
//
//////////////////////////////////////////////////////////////////////////////////
module fifo(clk,rst,buf_in,buf_out,wr_en,rd_en,empty,full,fifo_cnt);
 input rst,clk,wr_en,rd_en;
 input [7:0]buf_in;
 output reg [7:0]buf_out;
 output reg empty,full;
 output reg [3:0]fifo_cnt;
 
 reg[3:0]rd_ptr,wr_ptr;
 reg[7:0] buf_mem[0:15];
 
 always@(fifo_cnt)
 begin
 empty=(fifo_cnt==0);
 full=(fifo_cnt==15);
 end
 always@(posedge clk or posedge rst)
 begin
 if(rst)
 fifo_cnt <=0;
 else if((wr_en && !full ) && (rd_en && !empty))
 fifo_cnt <= fifo_cnt;
 else if(!full && wr_en )
 fifo_cnt <= fifo_cnt + 1;
 else if(!empty && rd_en)
 fifo_cnt <= fifo_cnt-1;
 else
 fifo_cnt<=fifo_cnt ;
 end
 
 always@(posedge clk or posedge rst)
 begin 
 if(rst)
 buf_out <= 0;
 else begin
 if(rd_en && !empty)
 buf_out <= buf_mem[rd_ptr];
 else
 buf_out <= buf_out;
 end
 end
 
 always@(posedge clk) 
 begin
 if(wr_en && !full)
 buf_mem[wr_ptr] <= buf_in;
 else buf_mem[wr_ptr] <= buf_mem[wr_ptr];
 end
 always@(posedge clk or posedge rst)
 begin
 if(rst) begin
 wr_ptr <=0;
 rd_ptr <=0;
 end
 else begin
 if(!full && wr_en)
 wr_ptr <= wr_ptr+1;
 else 
 wr_ptr <=wr_ptr;
 if(!empty && rd_en )
 rd_ptr <=rd_ptr +1;
 else 
 rd_ptr <= rd_ptr;
 end
 end
endmodule
